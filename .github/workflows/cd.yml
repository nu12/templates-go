name: Release
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: 'ubuntu-latest'
    name: Release
    steps:
    - name: Release
      uses: nu12/templates/actions/github/release@main
      with:
        version: '${{ github.ref_name }}'

  linux-amd64:
    needs: [release]
    runs-on: 'ubuntu-latest'
    name: Build (linux-amd64)
    steps:
    - name: Build
      uses: nu12/templates/actions/build/go@main
      with:
        go-version: '1.22.5'
        go-main: 'main.go greeting.go'
        name: template-go
    - name: Zip
      uses: nu12/templates/actions/utils/zip@main
      with:
        file-to-zip: 'template-go'
        output-file: 'template-go-linux-amd64.zip'
    - name: Upload
      uses: nu12/templates/actions/github/upload@main
      with:
        release-name: '${{ github.ref_name }}'
        upload-file: 'template-go-linux-amd64.zip'
    

  win-amd64:
    needs: [release]
    runs-on: "windows-latest"
    name: Build (win-amd64)
    steps:
    - name: Build
      uses: nu12/templates/actions/build/go@main
      with:
        go-version: '1.22.5'
        go-main: 'main.go greeting.go'
        name: template-go.exe
    - name: Zip
      uses: nu12/templates/actions/utils/zip@main
      with:
        file-to-zip: 'template-go.exe'
        output-file: 'template-go-linux-amd64.zip'
        util: '7z'
    - name: Upload
      uses: nu12/templates/actions/github/upload@main
      with:
        release-name: '${{ github.ref_name }}'
        upload-file: 'template-go-win-amd64.zip'

  darwin-amd64:
    needs: [release]
    runs-on: "macos-13"
    name: Build (darwin-amd64)
    steps:
    - name: Build
      uses: nu12/templates/actions/build/go@main
      with:
        go-version: '1.22.5'
        go-main: 'main.go greeting.go'
        name: template-go
    - name: Zip
      uses: nu12/templates/actions/utils/zip@main
      with:
        file-to-zip: 'template-go'
        output-file: 'template-go-darwin-amd64.zip'
    - name: Upload
      uses: nu12/templates/actions/github/upload@main
      with:
        release-name: '${{ github.ref_name }}'
        upload-file: 'template-go-darwin-amd64.zip'
  
  darwin-arm64:
    needs: [release]
    runs-on: 'macos-latest'
    name: Build (darwin-arm64)
    steps:
    - name: Build
      uses: nu12/templates/actions/build/go@main
      with:
        go-version: '1.22.5'
        go-main: 'main.go greeting.go'
        name: template-go
    - name: Zip
      uses: nu12/templates/actions/utils/zip@main
      with:
        file-to-zip: 'template-go'
        output-file: 'template-go-darwin-arm64.zip'
    - name: Upload
      uses: nu12/templates/actions/github/upload@main
      with:
        release-name: '${{ github.ref_name }}'
        upload-file: 'template-go-darwin-arm64.zip'

#   docker:
#     needs: [release]
#     runs-on: "ubuntu-latest"
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         registry: ghcr.io
#         username: ${{ github.actor }}
#         password: ${{ secrets.TOKEN }}
      
#     - name: Adjust tag for docker image
#       id: tag
#       run: |
#         export TAG=$(echo "${{ github.ref_name }}" | tr -d "v")
#         echo "value=$TAG" >> "$GITHUB_OUTPUT"

#     - name: Build and push
#       uses: docker/build-push-action@v4
#       with:
#         push: true
#         tags: ghcr.io/nu12/rand:latest,ghcr.io/nu12/rand:${{ steps.tag.outputs.value }}